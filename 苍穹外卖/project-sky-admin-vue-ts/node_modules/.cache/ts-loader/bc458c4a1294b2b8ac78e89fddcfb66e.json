{"remainingRequest":"D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js!D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js??ref--14-2!D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\src\\utils\\request.ts","dependencies":[{"path":"D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\src\\utils\\request.ts","mtime":1656470625967},{"path":"D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\BaiduNetdiskDownload\\\\part\\\\\\u82CD\\u7A79\\u5916\\u5356\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _typeof2 = _interopRequireDefault(require(\"D:\\\\BaiduNetdiskDownload\\\\part\\\\\\u82CD\\u7A79\\u5916\\u5356\\\\project-sky-admin-vue-ts\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/typeof\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _user = require(\"@/store/modules/user\");\n\nvar _requestOptimize = require(\"./requestOptimize\");\n\nvar _router = _interopRequireDefault(require(\"@/router\"));\n\nvar CancelToken = _axios.default.CancelToken;\n\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  'timeout': 600000\n}); // Request interceptors\n\n\nservice.interceptors.request.use(function (config) {\n  // console.log(config, 'config')\n  // config.data = config.params\n  // Add X-Access-Token header to every request, you can add other custom headers here\n  if (_user.UserModule.token) {\n    config.headers['token'] = _user.UserModule.token;\n  } else if (_user.UserModule.token && config.url != '/login') {\n    window.location.href = '/login';\n    return false;\n  } // config.headers['Access-Control-Allow-Origin'] = '*'\n  // config.headers['Content-Type'] = 'application/json;'\n  // get请求映射params参数\n\n\n  if (config.method === 'get' && config.params) {\n    var url = config.url + '?';\n\n    for (var _i = 0, _Object$keys = Object.keys(config.params); _i < _Object$keys.length; _i++) {\n      var propName = _Object$keys[_i];\n      var value = config.params[propName];\n      var part = encodeURIComponent(propName) + '=';\n\n      if (value !== null && typeof value !== 'undefined') {\n        if ((0, _typeof2.default)(value) === 'object') {\n          for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n            var _key = _Object$keys2[_i2];\n            var params = propName + '[' + _key + ']';\n            var subPart = encodeURIComponent(params) + '=';\n            url += subPart + encodeURIComponent(value[_key]) + '&';\n          }\n        } else {\n          url += part + encodeURIComponent(value) + '&';\n        }\n      }\n    }\n\n    url = url.slice(0, -1);\n    config.params = {};\n    config.url = url;\n  } // 计算当前请求key值\n\n\n  var key = (0, _requestOptimize.getRequestKey)(config); // console.log(pending,key,checkPending(key),'checkPending(key)')\n\n  if ((0, _requestOptimize.checkPending)(key)) {\n    // 重复请求则取消当前请求\n    var source = CancelToken.source();\n    config.cancelToken = source.token;\n    source.cancel('重复请求');\n  } else {\n    // 加入请求字典\n    _requestOptimize.pending[key] = true;\n  }\n\n  return config;\n}, function (error) {\n  Promise.reject(error);\n}); // Response interceptors\n\nservice.interceptors.response.use(function (response) {\n  // console.log(response, 'response')\n  if (response.data.status === 401) {\n    _router.default.push('/login'); // const res = response.data\n    // return response\n\n  } //请求响应中的config的url会带上代理的api需要去掉\n\n\n  response.config.url = response.config.url.replace('/api', ''); // 请求完成，删除请求中状态\n\n  var key = (0, _requestOptimize.getRequestKey)(response.config);\n  (0, _requestOptimize.removePending)(key); // if (response.data.code === 0) {\n  //   Message.error(response.data.msg)\n  //   // if(response.data.msg === 'NOTLOGIN' || response.data.msg === '未登录'){\n  //   //   router.push('/login')\n  //   // }\n  //   // return window.location.href = '/login'\n  //   // window.location.href = '/login'\n  //   // return false\n  // } else\n\n  if (response.data.code === 1) {\n    // const res = response.data\n    return response;\n  }\n\n  return response;\n}, function (error) {\n  // console.log(error.config, pending, 'error')\n  if (error && error.response) {\n    switch (error.response.status) {\n      case 401:\n        _router.default.push('/login');\n\n        break;\n\n      case 405:\n        error.message = '请求错误';\n    }\n  } //请求响应中的config的url会带上代理的api需要去掉\n\n\n  error.config.url = error.config.url.replace('/api', ''); // 请求完成，删除请求中状态\n\n  var key = (0, _requestOptimize.getRequestKey)(error.config);\n  (0, _requestOptimize.removePending)(key); // console.log(error, pending, 'error11')\n  // Message({\n  //   'message': error.message,\n  //   'type': 'error',\n  //   'duration': 5 * 1000\n  // })\n  // router.push('/login')\n\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",{"version":3,"sources":["D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\BaiduNetdiskDownload\\part\\苍穹外卖\\project-sky-admin-vue-ts\\src\\utils\\request.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAMA;;AACA,IAAM,WAAW,GAAG,eAAM,WAA1B;;AAEA,IAAM,OAAO,GAAG,eAAM,MAAN,CAAa;AAC3B,EAAA,OAAO,EAAE,OAAO,CAAC,GAAR,CAAY,gBADM;AAE3B,aAAW;AAFgB,CAAb,CAAhB,C,CAKA;;;AACA,OAAO,CAAC,YAAR,CAAqB,OAArB,CAA6B,GAA7B,CACE,UAAC,MAAD,EAAgB;AACd;AACA;AACA;AACA,MAAI,iBAAW,KAAf,EAAsB;AACpB,IAAA,MAAM,CAAC,OAAP,CAAe,OAAf,IAA0B,iBAAW,KAArC;AACD,GAFD,MAEO,IAAI,iBAAW,KAAX,IAAoB,MAAM,CAAC,GAAP,IAAc,QAAtC,EAAgD;AACrD,IAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,QAAvB;AACA,WAAO,KAAP;AACD,GATa,CAWd;AACA;AACA;;;AACA,MAAI,MAAM,CAAC,MAAP,KAAkB,KAAlB,IAA2B,MAAM,CAAC,MAAtC,EAA8C;AAC5C,QAAI,GAAG,GAAG,MAAM,CAAC,GAAP,GAAa,GAAvB;;AACA,oCAAuB,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,MAAnB,CAAvB,kCAAmD;AAA9C,UAAM,QAAQ,mBAAd;AACH,UAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CAAc,QAAd,CAAd;AACA,UAAI,IAAI,GAAG,kBAAkB,CAAC,QAAD,CAAlB,GAA+B,GAA1C;;AACA,UAAI,KAAK,KAAK,IAAV,IAAkB,OAAQ,KAAR,KAAmB,WAAzC,EAAsD;AACpD,YAAI,sBAAO,KAAP,MAAiB,QAArB,EAA+B;AAC7B,4CAAkB,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAlB,qCAAsC;AAAjC,gBAAM,IAAG,qBAAT;AACH,gBAAI,MAAM,GAAG,QAAQ,GAAG,GAAX,GAAiB,IAAjB,GAAuB,GAApC;AACA,gBAAI,OAAO,GAAG,kBAAkB,CAAC,MAAD,CAAlB,GAA6B,GAA3C;AACA,YAAA,GAAG,IAAI,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,IAAD,CAAN,CAA5B,GAA2C,GAAlD;AACD;AACF,SAND,MAMO;AACL,UAAA,GAAG,IAAI,IAAI,GAAG,kBAAkB,CAAC,KAAD,CAAzB,GAAmC,GAA1C;AACD;AACF;AACF;;AACD,IAAA,GAAG,GAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACA,IAAA,MAAM,CAAC,MAAP,GAAgB,EAAhB;AACA,IAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AACD,GAlCa,CAmCd;;;AACA,MAAM,GAAG,GAAG,oCAAc,MAAd,CAAZ,CApCc,CAqCd;;AACA,MAAI,mCAAa,GAAb,CAAJ,EAAuB;AACrB;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,MAAZ,EAAf;AACA,IAAA,MAAM,CAAC,WAAP,GAAqB,MAAM,CAAC,KAA5B;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,MAAd;AACD,GALD,MAKO;AACL;AACA,6BAAQ,GAAR,IAAe,IAAf;AACD;;AACD,SAAO,MAAP;AACD,CAjDH,EAkDE,UAAC,KAAD,EAAe;AACb,EAAA,OAAO,CAAC,MAAR,CAAe,KAAf;AACD,CApDH,E,CAuDA;;AACA,OAAO,CAAC,YAAR,CAAqB,QAArB,CAA8B,GAA9B,CACE,UAAC,QAAD,EAAkB;AAChB;AACA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,GAA7B,EAAkC;AAChC,oBAAO,IAAP,CAAY,QAAZ,EADgC,CAEhC;AACA;;AACD,GANe,CAOhB;;;AACA,EAAA,QAAQ,CAAC,MAAT,CAAgB,GAAhB,GAAsB,QAAQ,CAAC,MAAT,CAAgB,GAAhB,CAAoB,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAtB,CARgB,CAShB;;AACA,MAAM,GAAG,GAAG,oCAAc,QAAQ,CAAC,MAAvB,CAAZ;AACA,sCAAc,GAAd,EAXgB,CAYhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI,QAAQ,CAAC,IAAT,CAAc,IAAd,KAAuB,CAA3B,EAA8B;AAC5B;AACA,WAAO,QAAP;AACD;;AACD,SAAO,QAAP;AACD,CA3BH,EA4BE,UAAC,KAAD,EAAe;AACb;AACA,MAAI,KAAK,IAAI,KAAK,CAAC,QAAnB,EAA6B;AAC3B,YAAQ,KAAK,CAAC,QAAN,CAAe,MAAvB;AACE,WAAK,GAAL;AACE,wBAAO,IAAP,CAAY,QAAZ;;AACA;;AACF,WAAK,GAAL;AACE,QAAA,KAAK,CAAC,OAAN,GAAgB,MAAhB;AALJ;AAOD,GAVY,CAWb;;;AACA,EAAA,KAAK,CAAC,MAAN,CAAa,GAAb,GAAmB,KAAK,CAAC,MAAN,CAAa,GAAb,CAAiB,OAAjB,CAAyB,MAAzB,EAAiC,EAAjC,CAAnB,CAZa,CAab;;AACA,MAAM,GAAG,GAAG,oCAAc,KAAK,CAAC,MAApB,CAAZ;AACA,sCAAc,GAAd,EAfa,CAgBb;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,OAAO,CAAC,MAAR,CAAe,KAAf,CAAP;AACD,CApDH;eAuDe,O","sourcesContent":["import axios, { AxiosAdapter } from 'axios'\nimport { Message, MessageBox } from 'element-ui'\nimport { UserModule } from '@/store/modules/user'\nimport {\n  getRequestKey,\n  pending,\n  checkPending,\n  removePending\n} from './requestOptimize'\nimport router from '@/router'\nconst CancelToken = axios.CancelToken;\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  'timeout': 600000\n})\n\n// Request interceptors\nservice.interceptors.request.use(\n  (config: any) => {\n    // console.log(config, 'config')\n    // config.data = config.params\n    // Add X-Access-Token header to every request, you can add other custom headers here\n    if (UserModule.token) {\n      config.headers['token'] = UserModule.token\n    } else if (UserModule.token && config.url != '/login') {\n      window.location.href = '/login'\n      return false\n    }\n\n    // config.headers['Access-Control-Allow-Origin'] = '*'\n    // config.headers['Content-Type'] = 'application/json;'\n    // get请求映射params参数\n    if (config.method === 'get' && config.params) {\n      let url = config.url + '?';\n      for (const propName of Object.keys(config.params)) {\n        const value = config.params[propName];\n        var part = encodeURIComponent(propName) + '=';\n        if (value !== null && typeof (value) !== 'undefined') {\n          if (typeof value === 'object') {\n            for (const key of Object.keys(value)) {\n              let params = propName + '[' + key + ']';\n              var subPart = encodeURIComponent(params) + '=';\n              url += subPart + encodeURIComponent(value[key]) + '&';\n            }\n          } else {\n            url += part + encodeURIComponent(value) + '&';\n          }\n        }\n      }\n      url = url.slice(0, -1);\n      config.params = {};\n      config.url = url;\n    }\n    // 计算当前请求key值\n    const key = getRequestKey(config);\n    // console.log(pending,key,checkPending(key),'checkPending(key)')\n    if (checkPending(key)) {\n      // 重复请求则取消当前请求\n      const source = CancelToken.source();\n      config.cancelToken = source.token;\n      source.cancel('重复请求');\n    } else {\n      // 加入请求字典\n      pending[key] = true;\n    }\n    return config\n  },\n  (error: any) => {\n    Promise.reject(error)\n  }\n)\n\n// Response interceptors\nservice.interceptors.response.use(\n  (response: any) => {\n    // console.log(response, 'response')\n    if (response.data.status === 401) {\n      router.push('/login')\n      // const res = response.data\n      // return response\n    }\n    //请求响应中的config的url会带上代理的api需要去掉\n    response.config.url = response.config.url.replace('/api', '')\n    // 请求完成，删除请求中状态\n    const key = getRequestKey(response.config);\n    removePending(key);\n    // if (response.data.code === 0) {\n    //   Message.error(response.data.msg)\n    //   // if(response.data.msg === 'NOTLOGIN' || response.data.msg === '未登录'){\n    //   //   router.push('/login')\n    //   // }\n    //   // return window.location.href = '/login'\n    //   // window.location.href = '/login'\n    //   // return false\n    // } else\n    if (response.data.code === 1) {\n      // const res = response.data\n      return response\n    }\n    return response\n  },\n  (error: any) => {\n    // console.log(error.config, pending, 'error')\n    if (error && error.response) {\n      switch (error.response.status) {\n        case 401:\n          router.push('/login')\n          break;\n        case 405:\n          error.message = '请求错误'\n      }\n    }\n    //请求响应中的config的url会带上代理的api需要去掉\n    error.config.url = error.config.url.replace('/api', '')\n    // 请求完成，删除请求中状态\n    const key = getRequestKey(error.config);\n    removePending(key);\n    // console.log(error, pending, 'error11')\n    // Message({\n    //   'message': error.message,\n    //   'type': 'error',\n    //   'duration': 5 * 1000\n    // })\n    // router.push('/login')\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"],"sourceRoot":""}]}